language: generic
services:
  - docker

before_install:
  - docker build -t jimbobukii/react-test -f ./client/Dockerfile.dev ./client

script:
  - docker run -e CI=true jimbobukii/react-test npm test

after_success:
  - docker build -t jimbobukii/multi-client ./client
  - docker build -t jimbobukii/multi-nginx ./nginx
  - docker build -t jimbobukii/multi-server ./server
  - docker build -t jimbobukii/multi-worker ./worker
  # Log in to the docker CLI
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
  # Take those images and push them to docker hub
  - docker push jimbobukii/multi-client
  - docker push jimbobukii/multi-nginx
  - docker push jimbobukii/multi-server
  - docker push jimbobukii/multi-worker



# Fix for Failing Travis Builds
# In the upcoming lecture, we will be adding a script to our .travis.yml file. Due to a change in how the Jest library works with Create React App, we need to make a small modification:

# script:
#   - docker run USERNAME/react-test npm test -- --coverage
# instead should be:

# script:
#   - docker run -e CI=true USERNAME/react-test npm test
# You can read up on the CI=true variable here:

# https://facebook.github.io/create-react-app/docs/running-tests#linux-macos-bash

# and environment variables in Docker here:

# https://docs.docker.com/engine/reference/run/#env-environment-variables

# Additionally, you may want to set the following property if your travis build fails with “rakefile not found” by adding to the top of your .travis.yml file:

# language: generic 